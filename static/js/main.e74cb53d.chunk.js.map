{"version":3,"sources":["iconImageNotFound.png","classes/titleInfo.js","logic/getSeriesListByTitle.js","components/searchBar.jsx","components/cellEpisode.jsx","components/panelEpisodes.jsx","components/loadingSpinner.jsx","components/utilityBar.jsx","classes/episodeInfo.js","logic/getEpisodesFromID.js","classes/seriesInfo.js","logic/getSeriesInfoFromID.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TitleInfo","idImdb","title","years","imageLink","this","prototype","toString","getSeriesListByTitle","a","titleWithoutSpaces","replace","url","fetch","response","json","data","listSeries","i","length","series","push","SearchBar","props","state","text","suggestions","showSuggestions","handleFocus","event","setState","handleBlur","handleTextChange","bind","cancelSearch","className","onBlur","onFocus","style","autoFocus","ref","input","searchInput","type","placeholder","onChange","value","IconButton","onClick","width","height","float","renderSuggestion","focus","target","toLowerCase","index","selectedSuggestion","onSearch","map","item","onMouseDown","handleClick","key","src","iconImageNotFound","alt","Component","CellEpisode","setBackgroundColorRating","rotated","renderEpisodeCell","href","episodeInfo","link","rel","getTitleValue","countVisible","rating","getRatingCountValue","season","number","ratingCount","substring","PanelEpisodes","renderEpisodesSeasons","nextProps","nextState","rotate","episodesList","onLoad","id","getClassName","renderHeader","renderSeason","vals","getMinMaxEpisodeNumber","min","max","rows","Infinity","s","episodeNr","Object","keys","renderEpisodes","episodes","sort","b","Math","floor","LoadingSpinner","loading","constants","UtilityBar","zoom","visible","baseHeight","baseWidth","pageWidth","divWidth","centerPanelX","zoomIn","zoomOut","rotateTable","episodesLoaded","handleZoom","handleCountVisibility","updateWindowDimensions","onChangeCountVisibility","onChangeZoom","onZoomIn","onZoomOut","onRotateTable","maxWidth","overflow","marginLeft","centerTable","marginTop","transform","React","cloneElement","children","scaleFactor","window","addEventListener","removeEventListener","panelPosX","document","getElementById","getBoundingClientRect","x","innerWidth","panelCenter","getHeightWidth","heightL","widthL","checked","newValue","IconsBar","color","display","PrettoSlider","valueLabelDisplay","orientation","withStyles","root","padding","thumb","backgroundColor","border","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","EpisodeInfo","year","airdate","getEpisodesFromID","idSeries","listEpisodes","episode","SeriesInfo","genres","plot","rate","rateCount","getSeriesInfoFromID","SeriesInfoCard","Card","CardMedia","classes","media","component","CardContent","Typography","variant","align","seriesInfo","join","App","collapse","pnlH","handleSearch","clickCollapse","handleResize","epsPromise","seriesInfoPromise","eps","image","console","log","margin","Collapse","in","onResize","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e74cb53d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/iconImageNotFound.f15f4943.png\";","class TitleInfo {\n    constructor(idImdb, title, years, imageLink) {\n        this.idImdb = idImdb;\n        this.title = title;\n        this.years = years;\n        this.imageLink = imageLink;\n    }\n}\n\nTitleInfo.prototype.toString = function serieToString() {\n    var ret = `Id: ${this.idImdb}, ${this.title} (${this.years}) '${this.imageLink}'`;\n    return ret;\n};\n\nexport default TitleInfo;\n","import TitleInfo from \"../classes/titleInfo\";\n\nexport default async function getSeriesListByTitle(title) {\n  var titleWithoutSpaces = title.replace(/\\s/g, \"_\");\n  const url = \"http://192.168.1.234:9000/titleList/\" + titleWithoutSpaces;\n  const response = await fetch(url);\n  const data = await response.json();\n  var listSeries = [];\n\n  for (let i = 0; i < data.length; i++) {\n    var series = new TitleInfo(\n      data[i].idImdb,\n      data[i].title,\n      data[i].years,\n      data[i].imageLink\n    );\n\n    listSeries.push(series);\n  }\n\n  return listSeries;\n}\n","import React, { Component } from \"react\";\nimport \"./searchBar.css\";\nimport getSeriesListByTitle from \"../logic/getSeriesListByTitle\";\nimport iconImageNotFound from \"../iconImageNotFound.png\";\nimport { IconButton } from \"@material-ui/core\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\n\nclass SearchBar extends Component {\n  state = {\n    text: \"\",\n    suggestions: [],\n    showSuggestions: true,\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.cancelSearch = this.cancelSearch.bind(this);\n  }\n\n  render() {\n    return (\n      <div\n        className=\"SearchBar\"\n        onBlur={this.handleBlur}\n        onFocus={this.handleFocus}\n        style={this.props.style}\n      >\n        <div>\n          <input\n            autoFocus\n            ref={(input) => {\n              this.searchInput = input;\n            }}\n            type=\"text\"\n            placeholder=\"Search TV show ...\"\n            onChange={this.handleTextChange}\n            value={this.state.text}\n          />\n          <IconButton\n            onClick={this.cancelSearch}\n            style={{ width: 40, height: 40, float: \"right\" }}\n          >\n            <CancelIcon />\n          </IconButton>\n        </div>\n        {this.renderSuggestion()}\n      </div>\n    );\n  }\n\n  cancelSearch() {\n    this.setState({ text: \"\", suggestions: [], showSuggestions: false }, () => {\n      this.searchInput.focus();\n    });\n  }\n\n  handleFocus = (event) => {\n    this.setState({ showSuggestions: true });\n  };\n\n  handleBlur = (event) => {\n    this.setState({ showSuggestions: false });\n  };\n\n  async handleTextChange(event) {\n    this.setState({ text: event.target.value }, async () => {\n      if (this.state.text) {\n        var listSeries = await getSeriesListByTitle(\n          this.state.text.toLowerCase()\n        );\n\n        this.setState({ suggestions: listSeries });\n      } else {\n        this.setState({ suggestions: [] });\n      }\n    });\n  }\n\n  handleClick(index) {\n    const { suggestions } = this.state;\n    var selectedSuggestion = suggestions[index];\n    this.setState({\n      text: selectedSuggestion.title,\n    });\n    this.props.onSearch(selectedSuggestion /*.idImdb*/);\n  }\n\n  renderSuggestion() {\n    const { suggestions } = this.state;\n    const { showSuggestions } = this.state;\n    if (suggestions.length === 0 || !showSuggestions) {\n      return null;\n    }\n\n    return (\n      <ul>\n        {this.state.suggestions.map((item, i) => (\n          <li onMouseDown={() => this.handleClick(i)} key={\"li\" + item.idImdb}>\n            <div className=\"BasicContainer\">\n              <img\n                src={item.imageLink || iconImageNotFound}\n                key={\"img\" + item.idImdb}\n                alt={item.imageLink ? item.title : \"\"}\n              />\n              <div className=\"TitleContainer\">\n                <h4>{`${item.title}`}</h4>\n                <h5>{`${item.years}`}</h5>\n              </div>\n            </div>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport \"./cellEpisode.css\";\n\nclass CellEpisode extends Component {\n  render() {\n    return (\n      <td\n        className={\n          this.setBackgroundColorRating() +\n          (this.props.rotated ? \" cellRotated\" : \"\")\n        }\n      >\n        <div className=\"cellSquare\">{this.renderEpisodeCell()}</div>\n      </td>\n    );\n  }\n\n  renderEpisodeCell() {\n    var cell = (\n      <a\n        href={this.props.episodeInfo.link}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"noUnderline\"\n      >\n        <div title={this.getTitleValue()} className=\"cellContainer\">\n          <h6\n            className={this.props.countVisible ? \"rateLabel\" : \"rateLabelFull\"}\n          >\n            {this.props.episodeInfo.rating\n              ? this.props.episodeInfo.rating\n              : \"N.A\"}\n          </h6>\n          {this.props.countVisible ? (\n            <h6 className=\"rateCountLabel\">{this.getRatingCountValue()}</h6>\n          ) : (\n            <span></span>\n          )}\n        </div>\n      </a>\n    );\n\n    return cell;\n  }\n\n  getTitleValue() {\n    return `S${this.props.episodeInfo.season}, E${this.props.episodeInfo.number}, ${this.props.episodeInfo.title}`;\n  }\n\n  getRatingCountValue() {\n    var { ratingCount } = this.props.episodeInfo;\n    if (ratingCount) {\n      if (ratingCount.length > 3) {\n        return ratingCount.substring(0, 4) + \"k\";\n      } else {\n        return ratingCount;\n      }\n    } else {\n      return \"N.A.\";\n    }\n  }\n\n  setBackgroundColorRating() {\n    const { episodeInfo } = this.props;\n    const rating = episodeInfo.rating;\n    var className = \"\";\n\n    if (rating >= 8.6) {\n      //great\n      className = \"rateGreat\";\n    } else if (rating >= 7.6 && rating <= 8.5) {\n      //good\n      className = \"rateGood\";\n    } else if (rating >= 6.6 && rating <= 7.5) {\n      //regular\n      className = \"rateRegular\";\n    } else if (rating >= 5.0 && rating <= 6.5) {\n      //bad\n      className = \"rateBad\";\n    } else if (rating >= 0.1 && rating <= 4.9) {\n      //garbage\n      className = \"rateGarbage\";\n    } else {\n      //Invalid or unavailable data\n      className = \"rateUndefined\";\n    }\n\n    return className;\n  }\n}\n\nexport default CellEpisode;\n","import React, { Component } from \"react\";\nimport \"./panelEpisodes.css\";\nimport CellEpisode from \"./cellEpisode\";\n\nclass PanelEpisodes extends Component {\n    render() {\n        return this.renderEpisodesSeasons();\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (\n            this.props.rotate === nextProps.rotate &&\n            this.props.episodesList != null &&\n            this.props.episodesList === nextProps.episodesList &&\n            this.props.countVisible === nextProps.countVisible\n        ) {\n            return false;\n        } else {\n            if (this.props.episodesList !== nextProps.episodesList) {\n                this.props.onLoad();\n            }\n            return true;\n        }\n    }\n\n    renderEpisodesSeasons() {\n        const { episodesList } = this.props;\n        if (!episodesList || episodesList.length === 0) {\n            return <h1> </h1>;\n        } else {\n            var table = (\n                <table id={this.props.id} className={this.getClassName()}>\n                    <thead>\n                        <tr>{this.renderHeader()}</tr>\n                    </thead>\n                    <tbody>{this.renderSeason()}</tbody>\n                </table>\n            );\n            return table;\n        }\n    }\n\n    getClassName() {\n        return this.props.className ? this.props.className : \"\";\n    }\n\n    renderHeader() {\n        var vals = this.getMinMaxEpisodeNumber();\n        var min = vals[0];\n        var max = vals[1];\n\n        var rows = [];\n        rows.push(\n            <th key=\"ESHseparator\" className={this.props.rotate ? \"cellRotated\" : \"\"}>\n                <div className=\"cellSquare\"></div>\n            </th>\n        );\n        for (var i = min; i <= max; i++) {\n            rows.push(\n                <th key={\"EH\" + i} className={this.props.rotate ? \"cellRotated\" : \"\"}>\n                    <div className=\"cellSquare\">\n                        <h6 className=\"headerLabel\">E{i}</h6>\n                    </div>\n                </th>\n            );\n        }\n\n        return rows;\n    }\n\n    getMinMaxEpisodeNumber() {\n        const { episodesList } = this.props;\n        let max = -Infinity;\n        let min = 1;\n\n        for (let s in episodesList) {\n            let episodeNr = episodesList[s].length;\n            if (episodeNr > max) max = episodeNr;\n        }\n        return [min, max];\n    }\n\n    renderSeason() {\n        const { episodesList } = this.props;\n\n        const retVal = Object.keys(episodesList).map((season) => (\n            <tr key={season}>\n                <th key={\"S\" + season} className={this.props.rotate ? \"cellRotated\" : \"\"}>\n                    <div className=\"cellSquare\">\n                        <h6 className=\"headerLabel\">S{season}</h6>\n                    </div>\n                </th>\n                {this.renderEpisodes(this.props.episodesList[season])}\n            </tr>\n        ));\n\n        return retVal;\n    }\n\n    renderEpisodes(episodes) {\n        const episodesSorted = episodes.sort((a, b) => Math.floor(a.number) - Math.floor(b.number));\n\n        const retVal = episodesSorted.map((item) => (\n            <CellEpisode key={\"S\" + item.season + \"E\" + item.number} episodeInfo={item} rotated={this.props.rotate} countVisible={this.props.countVisible} />\n        ));\n\n        return retVal;\n    }\n}\n\nexport default PanelEpisodes;\n","import React, { Component } from \"react\";\nimport \"./loadingSpinner.css\";\n\nclass LoadingSpinner extends Component {\n  render() {\n    if (this.props.loading) {\n      return (\n        <div className=\"lds-ring\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      );\n    } else return <span></span>;\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport \"./utilityBar.css\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { IconButton, Checkbox, FormControlLabel } from \"@material-ui/core\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport ZoomInIcon from \"@material-ui/icons/ZoomIn\";\nimport ZoomOutIcon from \"@material-ui/icons/ZoomOut\";\n\nconst constants = {\n  maxZoom: 150,\n  minZoom: 50,\n  deltaHeight: 50,\n  defZoom: 100,\n};\n\nclass UtilityBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.zoomIn = this.zoomIn.bind(this);\n    this.zoomOut = this.zoomOut.bind(this);\n    this.rotateTable = this.rotateTable.bind(this);\n    this.episodesLoaded = this.episodesLoaded.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.handleCountVisibility = this.handleCountVisibility.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n  state = {\n    zoom: 100,\n    rotate: false,\n    visible: false,\n    baseHeight: 0,\n    baseWidth: 0,\n    pageWidth: 0,\n    divWidth: 0,\n    countVisible: true,\n    centerPanelX: 0,\n  };\n\n  render() {\n    return (\n      <div\n        id=\"tableContainer\"\n        className={\n          //\"col-md-10 panelContainer\" + (this.state.visible ? \"\" : \" d-none\")\n          \"col-md-10\" +\n          (this.state.visible ? \"\" : \" d-none\") +\n          (this.state.baseWidth > this.state.divWidth ? \" panelContainer\" : \"\")\n        }\n      >\n        <IconsBar\n          className=\"d-none d-sm-none d-md-none d-lg-block d-xl-block\"\n          style={{ float: \"left\", width: \"110px\" }}\n          rotate={true}\n          zoom={this.state.zoom}\n          countVisible={this.state.countVisible}\n          onChangeCountVisibility={this.handleCountVisibility}\n          onChangeZoom={this.handleZoom}\n          onZoomIn={this.zoomIn}\n          onZoomOut={this.zoomOut}\n          onRotateTable={this.rotateTable}\n        />\n        <IconsBar\n          className=\"d-block d-sm-block d-md-block d-lg-none d-xl-none\"\n          style={{ float: \"left\", width: \"100%\", maxWidth: 600 }}\n          rotate={false}\n          zoom={this.state.zoom}\n          countVisible={this.state.countVisible}\n          onChangeCountVisibility={this.handleCountVisibility}\n          onChangeZoom={this.handleZoom}\n          onZoomIn={this.zoomIn}\n          onZoomOut={this.zoomOut}\n          onRotateTable={this.rotateTable}\n        />\n        <div\n          id=\"centerPanel\"\n          style={{\n            width: `calc(100% - ${this.state.pageWidth > 992 ? 110 : 0}px)`,\n            overflow: \"auto hidden\",\n          }}\n        >\n          <div\n            style={{\n              height: this.state.baseHeight,\n              width: this.state.baseWidth,\n              marginLeft: this.centerTable(),\n              marginTop: \"50px\",\n            }}\n          >\n            <div\n              className=\"transformContainer\"\n              style={{\n                width: `calc(100% / ${this.state.zoom / 100})`,\n                transform:\n                  `scale(${this.state.zoom / 100}) ` +\n                  (this.state.rotate ? \" scaleX(-1) rotate(90deg)\" : \"\"),\n              }}\n            >\n              {React.cloneElement(this.props.children, {\n                scaleFactor: this.state.zoom / 100,\n                rotate: this.state.rotate,\n                onLoad: this.episodesLoaded,\n                countVisible: this.state.countVisible,\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    var panelPosX = document\n      .getElementById(\"centerPanel\")\n      .getBoundingClientRect().x;\n\n    this.setState({ pageWidth: window.innerWidth, centerPanelX: panelPosX });\n  }\n\n  centerTable() {\n    var pageCenter = this.state.pageWidth / 2;\n    var tableCenter = this.state.baseWidth / 2;\n    var panelCenter = pageCenter - tableCenter - this.state.centerPanelX;\n\n    return panelCenter > 0 ? panelCenter : 0;\n  }\n\n  episodesLoaded() {\n    this.setState(\n      {\n        visible: true,\n      },\n      () => this.getHeightWidth()\n    );\n  }\n\n  getHeightWidth() {\n    var heightL = document\n      .getElementById(this.props.children.props.id)\n      .getBoundingClientRect().height;\n    var widthL = document\n      .getElementById(this.props.children.props.id)\n      .getBoundingClientRect().width;\n\n    var panelPosX = document\n      .getElementById(\"centerPanel\")\n      .getBoundingClientRect().x;\n    this.setState({\n      baseWidth: widthL,\n      baseHeight: heightL,\n      centerPanelX: panelPosX,\n    });\n  }\n\n  handleCountVisibility(event) {\n    this.setState({ countVisible: event.target.checked });\n  }\n\n  handleZoom(event, newValue) {\n    this.setState({ zoom: Math.floor(newValue) }, () => this.getHeightWidth());\n  }\n\n  zoomIn() {\n    const { zoom } = this.state;\n    if (zoom < constants.maxZoom)\n      this.setState({ zoom: zoom + 5 }, () => this.getHeightWidth());\n  }\n\n  zoomOut() {\n    const { zoom } = this.state;\n    if (zoom > constants.minZoom)\n      this.setState({ zoom: zoom - 5 }, () => this.getHeightWidth());\n  }\n\n  rotateTable() {\n    const { rotate } = this.state;\n    this.setState({ rotate: !rotate }, () => this.getHeightWidth());\n  }\n}\n\nconst IconsBar = ({\n  className,\n  style,\n  rotate,\n  zoom,\n  countVisible,\n  onChangeCountVisibility,\n  onChangeZoom,\n  onZoomIn,\n  onZoomOut,\n  onRotateTable,\n}) => {\n  return (\n    <div className={className} style={style}>\n      <IconButton\n        type=\"button\"\n        onClick={onRotateTable}\n        style={{ color: \"black\" }}\n      >\n        <AutorenewIcon />\n      </IconButton>\n      {rotate && <br />}\n      <IconButton onClick={onZoomIn}>\n        {rotate ? (\n          <ZoomInIcon style={{ color: \"black\" }} />\n        ) : (\n          <ZoomOutIcon style={{ color: \"black\" }} />\n        )}\n      </IconButton>\n      {rotate && <br />}\n      <div\n        style={{\n          width: rotate ? \"\" : 150,\n          height: rotate ? 200 : \"\",\n          display: rotate ? \"\" : \"inline-block\",\n        }}\n      >\n        <PrettoSlider\n          valueLabelDisplay=\"auto\"\n          orientation={rotate ? \"vertical\" : \"horizontal\"}\n          value={zoom || constants.defZoom}\n          onChange={onChangeZoom}\n          min={constants.minZoom}\n          max={constants.maxZoom}\n        />\n      </div>\n      <IconButton onClick={onZoomOut}>\n        {rotate ? (\n          <ZoomOutIcon style={{ color: \"black\" }} />\n        ) : (\n          <ZoomInIcon style={{ color: \"black\" }} />\n        )}\n      </IconButton>\n      {/* {rotate && <br />} */}\n      {/* <FormControlLabel\n        control={\n          <Checkbox\n            checked={countVisible}\n            onChange={onChangeCountVisibility}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Counter\"\n      /> */}\n    </div>\n  );\n};\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: \"#52af77\",\n    padding: \"6px 0\",\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -11, //-8,\n    marginLeft: \"-11px !important\",\n    transform: \"rotate(90deg) !important\",\n    \"&:focus, &:hover, &$active\": {\n      boxShadow: \"inherit\",\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: \"auto\",\n  },\n  track: {\n    height: 2,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 2,\n    borderRadius: 4,\n  },\n})(Slider);\n\nexport default UtilityBar;\n","class EpisodeInfo {\n    constructor(title, link, imageLink, rating, ratingCount, year, number, season) {\n        this.title = title;\n        this.link = link;\n        this.imageLink = imageLink;\n        this.rating = rating;\n        this.ratingCount = ratingCount;\n        this.year = year;\n        this.number = number;\n        this.season = season;\n    }\n}\n\nEpisodeInfo.prototype.toString = function episodeToString() {\n    var ret = `S${this.season}, Ep${this.number}, Date ${this.airdate} ${this.rating} : '${this.title}'`;\n    return ret;\n};\n\nexport default EpisodeInfo;\n","import EpisodeInfo from \"../classes/episodeInfo\";\n\nexport default async function getEpisodesFromID(idSeries) {\n  const url = \"http://192.168.1.234:9000/episodesList/\" + idSeries;\n  const response = await fetch(url);\n  const data = await response.json();\n  var listEpisodes = {};\n\n  for (let i = 0; i < data.length; i++) {\n    var episode = new EpisodeInfo(\n      data[i].title,\n      data[i].link,\n      data[i].imageLink,\n      data[i].rating,\n      data[i].ratingCount,\n      data[i].year,\n      data[i].number,\n      data[i].season\n    );\n    if (!listEpisodes[episode.season]) listEpisodes[episode.season] = [episode];\n    else listEpisodes[episode.season].push(episode);\n  }\n\n  return listEpisodes;\n}\n","class SeriesInfo {\n    constructor(idImdb, genres, plot, rate, rateCount) {\n        this.idImdb = idImdb;\n        this.genres = genres;\n        this.plot = plot;\n        this.rate = rate;\n        this.rateCount = rateCount;\n    }\n}\n\nexport default SeriesInfo;\n","import SeriesInfo from \"../classes/seriesInfo\";\n\nexport default async function getSeriesInfoFromID(idSeries) {\n  const url = \"http://192.168.1.234:9000/seriesInfo/\" + idSeries;\n  const response = await fetch(url);\n  const data = await response.json();\n\n  var series = new SeriesInfo(\n    data.idImdb,\n    data.genres,\n    data.plot,\n    data.rate,\n    data.rateCount\n  );\n  return series;\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"./components/searchBar\";\nimport PanelEpisodes from \"./components/panelEpisodes\";\nimport LoadingSpinner from \"./components/loadingSpinner\";\nimport UtilityBar from \"./components/utilityBar\";\nimport getEpisodesFromID from \"./logic/getEpisodesFromID\";\nimport getSeriesInfoFromID from \"./logic/getSeriesInfoFromID\";\nimport { Card, CardMedia, CardContent, Typography } from \"@material-ui/core\";\nimport iconImageNotFound from \"./iconImageNotFound.png\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.clickCollapse = this.clickCollapse.bind(this);\n    this.handleResize = this.handleResize.bind(this);\n  }\n\n  state = {\n    series: null,\n    seriesInfo: null,\n    episodesList: [],\n    loading: false,\n    collapse: false,\n    pnlH: null,\n  };\n\n  async handleSearch(series) {\n    this.setState({ loading: true });\n\n    var epsPromise = getEpisodesFromID(series.idImdb);\n    var seriesInfoPromise = getSeriesInfoFromID(series.idImdb);\n\n    var eps = await epsPromise;\n    var seriesInfo = await seriesInfoPromise;\n\n    this.setState({\n      episodesList: eps,\n      series: series,\n      seriesInfo: seriesInfo,\n      loading: false,\n    });\n  }\n\n  getImage() {\n    const { series } = this.state;\n    var image = \"\";\n\n    if (series) {\n      var imageLink = series.imageLink;\n      image = imageLink;\n      console.log(\"image\", image);\n    }\n\n    return image;\n  }\n\n  clickCollapse(event) {\n    this.setState({ collapse: !this.state.collapse });\n  }\n\n  handleResize(height) {\n    this.setState({ pnlH: height });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"row\" style={{ margin: 0 }}>\n          <div className=\"col-md-4\"></div>\n          <div className=\"col-md-4\">\n            <SearchBar onSearch={this.handleSearch} style={{ marginTop: 20 }} />\n            <LoadingSpinner loading={this.state.loading} />\n          </div>\n        </div>\n\n        <div\n          className=\"row\"\n          style={{\n            height: this.state.pnlH ? this.state.pnlH : \"\",\n            margin: 0,\n          }}\n        >\n          <div className=\"col-md-2\">\n            {this.state.series && (\n              <button\n                className=\"btn btn-primary d-sm-none\"\n                style={{ margin: 20 }}\n                onClick={this.clickCollapse}\n              >\n                {this.state.collapse ? \"Expand\" : \"Collapse\"}\n              </button>\n            )}\n            <Collapse in={!this.state.collapse}>\n              {this.state.series && (\n                <SeriesInfoCard\n                  series={this.state.series}\n                  seriesInfo={this.state.seriesInfo}\n                />\n              )}\n            </Collapse>\n          </div>\n\n          <UtilityBar onResize={this.handleResize}>\n            <PanelEpisodes\n              id=\"pnlEpisodes\"\n              episodesList={this.state.episodesList}\n            />\n          </UtilityBar>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction SeriesInfoCard(props) {\n  return (\n    <Card>\n      <CardMedia\n        classes={{ media: \"seriesCover\" }}\n        component=\"img\"\n        src={props.series && (props.series.imageLink || iconImageNotFound)}\n        // alt={this.state.series != null ? this.state.series.title : \"\"}\n      ></CardMedia>\n      <CardContent className=\"card-title\">\n        <Typography variant=\"body2\" align=\"left\" display=\"block\">\n          <b>Genres: </b>\n          {props.seriesInfo ? `${props.seriesInfo.genres.join(\", \")}` : \"\"}\n        </Typography>\n        <Typography variant=\"body2\" align=\"left\" display=\"block\">\n          <b>Rate: </b>\n          {props.seriesInfo\n            ? `${props.seriesInfo.rate}/10 (${props.seriesInfo.rateCount} votes)`\n            : \"\"}\n        </Typography>\n        <Typography variant=\"body2\" align=\"left\" display=\"block\">\n          <b>Plot: </b>\n          {props.seriesInfo ? `${props.seriesInfo.plot}` : \"\"}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}